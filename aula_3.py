# -*- coding: utf-8 -*-
"""Aula_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hoBtpydzD8l1FqXGe6oVNgIEvr3rFGiB
"""

import pandas as pd
df  = pd.read_csv("https://raw.githubusercontent.com/guilhermeonrails/data-jobs/refs/heads/main/salaries.csv")

#retira registros com colunas nulas
df_dados_tratados = df.dropna()


df_dados_tratados = df_dados_tratados.assign(work_year = df_dados_tratados['work_year'].astype('int64'))
df_dados_tratados.head()
df_dados_tratados.info()

df_dados_tratados = df_dados_tratados.rename(columns={
    'ano_trabalho': 'ano_contratacao',
    'experience_level': 'nivel_experiencia',
    'employment_type': 'tipo_emprego',
    'job_title': 'cargo',
    'salary': 'salario',
    'salary_currency': 'moeda_salario',
    'salary_in_usd': 'salario_em_usd',
    'employee_residence': 'residencia_empregado',
    'remote_ratio': 'proporcao_remoto',
    'company_location': 'localizacao_empresa',
    'company_size': 'tamanho_empresa'
})

display(df_dados_tratados.head())

#Este código conta a frequência de cada valor na coluna nivel_experiencia do DataFrame df_dados_tratados. Ele mostra quantas vezes cada nível de experiência (como SE, MI, EN, EX) aparece no conjunto de dados.
df_dados_tratados['nivel_experiencia'].value_counts()

df_dados_tratados['nivel_experiencia'].value_counts().plot(kind='bar', title='Frequência de cada nível de experiência')

df_dados_tratados['nivel_experiencia'] = df_dados_tratados['nivel_experiencia'].replace({
    'EN': 'Iniciante',
    'MI': 'Intermediário',
    'SE': 'Sênior',
    'EX': 'Executivo'
})

display(df_dados_tratados.head())

import matplotlib.pyplot as plt

df_dados_tratados['nivel_experiencia'].value_counts().plot(kind='bar', title='Frequência de cada nível de experiência')
plt.show()

#libs mais usadas matplotlib e seaborn
import seaborn as sns

sns.barplot(data=df_dados_tratados, x='nivel_experiencia', y='salario_em_usd')
plt.show()

import matplotlib.pyplot as plt

ordem = df_dados_tratados.groupby('nivel_experiencia')['salario_em_usd'].mean().sort_values(ascending=False).index

plt.figure(figsize=(8, 5))
sns.barplot(data=df_dados_tratados, x='nivel_experiencia', y='salario_em_usd', order = ordem)
plt.title('Distribuição de Salários por Nível de Experiência')
plt.xlabel('Nível de Experiência')
plt.ylabel('Salário médio anual (USD)')
plt.show()

df_dados_tratados.groupby('nivel_experiencia')['salario_em_usd'].mean().sort_values(ascending=False)

plt.figure(figsize=(10, 4))
sns.histplot(df_dados_tratados['salario_em_usd'], bins=50, kde=True)
plt.title('Distribuição de Salários Anuais')
plt.xlabel('Salário anual (USD)')
plt.ylabel('Frequência')
plt.show()

plt.figure(figsize=(10, 4))
sns.boxplot(x=df_dados_tratados['salario_em_usd'])
plt.title('Distribuição de Salários')
plt.xlabel('Salário anual (USD)')
plt.show()

ordem_senioridade = ['Iniciante', 'Intermediário', 'Sênior', 'Executivo']

plt.figure(figsize=(10, 5))
sns.boxplot(x='nivel_experiencia', y='salario_em_usd', data=df_dados_tratados, order=ordem_senioridade)
plt.title('Distribuição de Salários por Nível de Experiência')
plt.xlabel('Nível de Experiência')
plt.ylabel('Salário anual (USD)')
plt.show()

ordem_senioridade = ['Iniciante', 'Intermediário', 'Sênior', 'Executivo']

plt.figure(figsize=(10, 5))
sns.boxplot(x='nivel_experiencia', y='salario_em_usd', data=df_dados_tratados, order=ordem_senioridade, palette='Set2', hue='nivel_experiencia')
plt.title('Distribuição de Salários por Nível de Experiência')
plt.xlabel('Nível de Experiência')
plt.ylabel('Salário anual (USD)')
plt.show()

import plotly.express as px

fig = px.box(df_dados_tratados, x='nivel_experiencia', y='salario_em_usd', color='nivel_experiencia')
fig

remoto_contagem = df_dados_tratados['proporcao_remoto'].value_counts().reset_index()
remoto_contagem.columns = ['proporcao_remoto', 'quantidade']

fig = px.pie(
    remoto_contagem,
    names='proporcao_remoto',
    values='quantidade',
    title='Proporção dos tipos de trabalho',
    hole=0.5)

fig.update_traces(textinfo='percent+label')
fig.show()

df_dados_tratados

df_data_engineer = df_dados_tratados[df_dados_tratados['cargo'] == 'Data Engineer']


plt.figure(figsize=(50, 10))
sns.boxplot(x='localizacao_empresa', y='salario_em_usd', data=df_data_engineer, palette='Set2', hue='localizacao_empresa')
plt.title('Distribuição de Salários por País')
plt.xlabel('País')
plt.ylabel('Salário anual (USD)')
plt.show()

import plotly.express as px

#df_data_scientist = df_dados_tratados[df_dados_tratados['cargo'] == 'Data Scientist'].sort_values(by='localizacao_empresa', ascending=True)
df_data_scientist = df_dados_tratados[df_dados_tratados['cargo'] == 'Data Scientist']

fig = px.box(df_data_scientist, x='localizacao_empresa', y='salario_em_usd', color='localizacao_empresa', title='Distribuição de Salários por País').update_xaxes(categoryorder='total descending')
fig



paises_unicos = df_dados_tratados['localizacao_empresa'].unique()
print("Siglas de países únicas no DataFrame:")
print(paises_unicos)

"""Por favor, forneça um dicionário mapeando cada uma das siglas acima para o nome completo do país em português. Por exemplo:"""

mapeamento_paises_completo = {
    'US': 'Estados Unidos',
    'AU': 'Austrália',
    'CA': 'Canadá',
    'JP': 'Japão',
    'GB': 'Reino Unido',
    'MX': 'México',
    'NL': 'Países Baixos (Holanda)',
    'ES': 'Espanha',
    'FR': 'França',
    'MT': 'Malta',
    'LT': 'Lituânia',
    'PH': 'Filipinas',
    'NZ': 'Nova Zelândia',
    'DE': 'Alemanha',
    'LV': 'Letônia',
    'IE': 'Irlanda',
    'MK': 'Macedónia do Norte',
    'AT': 'Áustria',
    'PL': 'Polônia',
    'SK': 'Eslováquia',
    'BR': 'Brasil',
    'SI': 'Eslovênia',
    'FI': 'Finlândia',
    'HK': 'Hong Kong',
    'LS': 'Lesoto',
    'IN': 'Índia',
    'JM': 'Jamaica',
    'CH': 'Suíça',
    'BE': 'Bélgica',
    'PE': 'Peru',
    'SG': 'Cingapura',
    'PT': 'Portugal',
    'IT': 'Itália',
    'HU': 'Hungria',
    'RO': 'Romênia',
    'AR': 'Argentina',
    'ZA': 'África do Sul',
    'PA': 'Panamá',
    'EE': 'Estônia',
    'LU': 'Luxemburgo',
    'DZ': 'Argélia',
    'EG': 'Egito',
    'CL': 'Chile',
    'GR': 'Grécia',
    'KE': 'Quênia',
    'CD': 'República Democrática do Congo',
    'SE': 'Suécia',
    'KR': 'Coreia do Sul',
    'TW': 'Taiwan',
    'NO': 'Noruega',
    'CZ': 'República Tcheca',
    'TR': 'Turquia',
    'CY': 'Chipre',
    'CO': 'Colômbia',
    'DK': 'Dinamarca',
    'AE': 'Emirados Árabes Unidos',
    'BG': 'Bulgária',
    'ID': 'Indonésia',
    'JO': 'Jordânia',
    'RS': 'Sérvia',
    'UA': 'Ucrânia',
    'PR': 'Porto Rico',
    'SV': 'El Salvador',
    'EC': 'Equador',
    'DO': 'República Dominicana',
    'MY': 'Malásia',
    'XK': 'Kosovo',
    'CR': 'Costa Rica',
    'ZM': 'Zâmbia',
    'AM': 'Armênia',
    'IL': 'Israel',
    'LB': 'Líbano',
    'NG': 'Nigéria',
    'HR': 'Croácia',
    'PK': 'Paquistão',
    'HN': 'Honduras',
    'VE': 'Venezuela',
    'AS': 'Samoa Americana',
    'SA': 'Arábia Saudita',
    'OM': 'Omã',
    'BA': 'Bósnia e Herzegóvina',
    'VN': 'Vietnã',
    'GI': 'Gibraltar',
    'MU': 'Maurício',
    'RU': 'Rússia',
    'QA': 'Catar',
    'GH': 'Gana',
    'AD': 'Andorra',
    'CF': 'República Centro-Africana',
    'TH': 'Tailândia',
    'IR': 'Irã',
    'BS': 'Bahamas',
    'IQ': 'Iraque',
    'CN': 'China',
    'MD': 'Moldávia'
}

df_dados_tratados['localizacao_empresa'] = df_dados_tratados['localizacao_empresa'].replace(mapeamento_paises_completo)

display(df_dados_tratados.head())

import plotly.express as px

df_data_scientist = df_dados_tratados[df_dados_tratados['cargo'] == 'Data Scientist']
df_data_scientist_median = df_data_scientist.groupby('localizacao_empresa')['salario_em_usd'].median().reset_index()


df_data_scientist

figMedian = px.bar(df_data_scientist_median, x='localizacao_empresa', y='salario_em_usd', color='localizacao_empresa', title='Distribuição de Salários por País').update_xaxes(categoryorder='total descending')
figMedian

df_data_scientist_mean = df_data_scientist.groupby('localizacao_empresa')['salario_em_usd'].mean().reset_index()

figMean = px.bar(df_data_scientist_mean, x='localizacao_empresa', y='salario_em_usd', color='localizacao_empresa', title='Distribuição de Salários por País').update_xaxes(categoryorder='total descending')
figMean